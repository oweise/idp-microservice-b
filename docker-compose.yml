version: '2'

volumes:
  prometheus_data: {}
  grafana_data: {}

networks:
  observability-network:
    driver: bridge

services:
  microserviceb:
    container_name: microservicea-server
    build:
      dockerfile: Dockerfile
    image: microserviceb-server-image:latest
    ports:
      - "8080:8080"
    depends_on:
      - microserviceb-db
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://microserviceb-db:5432/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=consol
      - SPRING_JPA_HIBERNATE_DDL_AUTO=create-drop
      - SPRING_RABBITMQ_HOST=rabbit-mq
      - SPRING_RABBITMQ_PORT=5672
      - OPENTRACING_JAEGER_UDP-SENDER_HOST=observability-jaeger
    networks:
      - observability-network

  microserviceb-db:
    image: postgres:latest
    container_name: microserviceb-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=consol
    ports:
      - "5432:5432"
    networks:
      - observability-network

  rabbit-mq:
    image: rabbitmq:3-management
    container_name: rabbit-mq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - observability-network

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    ports:
      - "9090:9090"
    networks:
      - observability-network

  grafana:
    image: grafana/grafana
    container_name: grafana
    links:
      - prometheus:prometheus
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=consol
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    ports:
      - "3000:3000"
    networks:
      - observability-network

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: observability-jaeger
    depends_on:
      - microserviceb
    ports:
      - "16686:16686"
      - "14250:14250"
      - "14268:14268"
      - "5778:5778"
      - "5775:5775/udp"
      - "6832:6832/udp"
      - "6831:6831/udp"
    networks:
      - observability-network